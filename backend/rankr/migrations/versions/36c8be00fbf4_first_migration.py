"""First Migration

Revision ID: 36c8be00fbf4
Revises:
Create Date: 2021-08-14 23:07:56.430429

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "36c8be00fbf4"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "country",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("country", sa.String(length=63), nullable=False),
        sa.Column("country_code", sa.String(length=2), nullable=False),
        sa.Column("region", sa.String(length=15), nullable=False),
        sa.Column("sub_region", sa.String(length=63), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("country"),
        sa.UniqueConstraint("country_code"),
    )
    op.create_table(
        "institution",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("grid_id", sa.String(length=15), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("established", sa.Integer(), nullable=True),
        sa.Column("lat", sa.String(length=63), nullable=True),
        sa.Column("lng", sa.String(length=63), nullable=True),
        sa.Column("city", sa.String(length=63), nullable=True),
        sa.Column("state", sa.String(length=63), nullable=True),
        sa.Column("country_id", sa.Integer(), nullable=True),
        sa.Column("soup", sa.String(length=1000), nullable=True),
        sa.ForeignKeyConstraint(["country_id"], ["country.id"],),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("grid_id"),
    )
    op.create_table(
        "acronym",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("institution_id", sa.Integer(), nullable=True),
        sa.Column("acronym", sa.String(length=255), nullable=False),
        sa.ForeignKeyConstraint(["institution_id"], ["institution.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "alias",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("institution_id", sa.Integer(), nullable=True),
        sa.Column("alias", sa.String(length=255), nullable=False),
        sa.ForeignKeyConstraint(["institution_id"], ["institution.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "label",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("institution_id", sa.Integer(), nullable=True),
        sa.Column("iso639", sa.String(length=2), nullable=False),
        sa.Column("label", sa.String(length=255), nullable=False),
        sa.ForeignKeyConstraint(["institution_id"], ["institution.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "link",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("institution_id", sa.Integer(), nullable=True),
        sa.Column(
            "type",
            sa.Enum(
                "homepage",
                "wikipedia",
                "qs",
                "shanghai",
                "the",
                name="linktypeenum",
            ),
            server_default="homepage",
            nullable=False,
        ),
        sa.Column("link", sa.String(length=1023), nullable=False),
        sa.ForeignKeyConstraint(["institution_id"], ["institution.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_link_type"), "link", ["type"], unique=False)
    op.create_table(
        "ranking",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("institution_id", sa.Integer(), nullable=True),
        sa.Column(
            "ranking_system",
            sa.Enum("qs", "shanghai", "the", name="rankingsystemenum"),
            nullable=False,
        ),
        sa.Column(
            "ranking_type",
            sa.Enum(
                "university ranking", "subject ranking", name="rankingtypeenum"
            ),
            nullable=False,
        ),
        sa.Column("year", sa.Integer(), nullable=True),
        sa.Column("field", sa.String(length=255), nullable=False),
        sa.Column("subject", sa.String(length=255), nullable=False),
        sa.Column(
            "metric",
            sa.Enum(
                "Rank",
                "Overall Score",
                "Academic Reputation Score",
                "Employer Reputation Score",
                "Faculty Student Score",
                "International Faculty Score",
                "International Students Score",
                "Citations per Faculty Score",
                "Citations per Paper Score",
                "H-index Citations Score",
                "National Rank",
                "Alumni Score",
                "Award Score",
                "HiCi Score",
                "N&S Score",
                "PUB Score",
                "PCP Score",
                "CNCI Score",
                "IC Score",
                "TOP Score",
                "Q1 Score",
                "# FTE Students",
                "# Students per Staff",
                "% International Students",
                "% Female Students",
                "Teaching Score",
                "Research Score",
                "Citations Score",
                "Industry Income Score",
                "International Outlook Score",
                name="metricenum",
            ),
            nullable=False,
        ),
        sa.Column("raw_value", sa.String(length=63), nullable=True),
        sa.Column("value", sa.DECIMAL(precision=13, scale=3), nullable=True),
        sa.Column(
            "value_type",
            sa.Enum("integer", "percent", "decimal", name="valuetypeenum"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["institution_id"], ["institution.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_ranking_metric"), "ranking", ["metric"], unique=False
    )
    op.create_index(
        op.f("ix_ranking_ranking_system"),
        "ranking",
        ["ranking_system"],
        unique=False,
    )
    op.create_index(
        op.f("ix_ranking_ranking_type"),
        "ranking",
        ["ranking_type"],
        unique=False,
    )
    op.create_table(
        "type",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("institution_id", sa.Integer(), nullable=True),
        sa.Column(
            "type",
            sa.Enum(
                "Archive",
                "Company",
                "Education",
                "Facility",
                "Government",
                "Healthcare",
                "Nonprofit",
                "Other",
                name="insttypeenum",
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["institution_id"], ["institution.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_type_type"), "type", ["type"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_type_type"), table_name="type")
    op.drop_table("type")
    op.drop_index(op.f("ix_ranking_ranking_type"), table_name="ranking")
    op.drop_index(op.f("ix_ranking_ranking_system"), table_name="ranking")
    op.drop_index(op.f("ix_ranking_metric"), table_name="ranking")
    op.drop_table("ranking")
    op.drop_index(op.f("ix_link_type"), table_name="link")
    op.drop_table("link")
    op.drop_table("label")
    op.drop_table("alias")
    op.drop_table("acronym")
    op.drop_table("institution")
    op.drop_table("country")
    # ### end Alembic commands ###
